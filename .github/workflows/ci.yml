name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      SDL_VIDEODRIVER: dummy
      MPLBACKEND: Agg
      PYGAME_HIDE_SUPPORT_PROMPT: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Verify submodule contents
        run: ls -la fast-pysf/

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.11"

      - name: Cache .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Set up Python
        run: uv python install 3.12

      - name: System packages for headless
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libglib2.0-0 libgl1 fonts-dejavu-core

      - name: Sync dependencies (locked)
        run: uv sync --frozen

      - name: Lint
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Type check
        run: uvx ty check . --exit-zero

      - name: Unit tests
        run: uv run pytest -q

      - name: Preflight for Tiny batch smoke
        run: |
          set -euo pipefail
          echo "Preflight: checking schema file, uv availability, and optional jq"
          SCHEMA_PATH="docs/dev/issues/social-navigation-benchmark/episode_schema.json"
          if [ ! -r "$SCHEMA_PATH" ]; then
            echo "ERROR: Schema file not found or not readable: $SCHEMA_PATH" >&2
            ls -la "$(dirname "$SCHEMA_PATH")" || true
            exit 1
          fi
          if ! command -v uv >/dev/null 2>&1; then
            echo "ERROR: 'uv' CLI not found in PATH" >&2
            exit 1
          fi
          if [ ! -x "$(command -v uv)" ]; then
            echo "ERROR: 'uv' CLI is not executable" >&2
            exit 1
          fi
          if command -v jq >/dev/null 2>&1; then
            echo "jq found; JSONL validation will be performed after smoke run"
          else
            echo "jq not found; JSONL validation will be skipped (episodes.jsonl size will still be checked)"
          fi

      - name: Tiny batch smoke
        run: |
          cat > matrix.yaml <<'YAML'
          - id: ci-smoke-uni-low-open
            density: low
            flow: uni
            obstacle: open
            groups: 0.0
            speed_var: low
            goal_topology: point
            robot_context: embedded
            repeats: 1
          YAML
          uv run robot_sf_bench run \
            --matrix matrix.yaml \
            --out episodes.jsonl \
            --schema docs/dev/issues/social-navigation-benchmark/episode_schema.json \
            --horizon 3 --dt 0.1 --base-seed 0 --quiet
          test -s episodes.jsonl

      - name: Validate JSONL (optional jq)
        run: |
          set -euo pipefail
          if command -v jq >/dev/null 2>&1; then
            echo "Validating first JSONL record with jqâ€¦"
            head -n1 episodes.jsonl | jq type >/dev/null
          else
            echo "jq not installed; skipping JSONL validation"
          fi

      - name: Upload smoke artifact on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-smoke-episodes
          path: episodes.jsonl
