[project]
name = "robot_sf"
version = "2.0.0"
description = """
This package allows implementing a "gymnasium-style" environment
for navigating a crowd with autonomous micromobility vehicles
"""
authors = [
    {name = "Marco TrÃ¶ster", email = "marco.troester.student@uni-augsburg.de"}
]
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "gymnasium",
    "pylint",
    "pytest",
    "scalene",
    "numba",
    "pygame",
    "stable-baselines3",
    "tqdm",
    "rich",
    "tensorboard",
    "ruff>=0.9.7",
    "pre-commit>=4.1.0",
    "scikit-learn>=1.6.1",
]
license = {text = "GPLv3"}

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

# Use ruff when possible
[tool.autopep8]
max_line_length = 100
verbose = false
hang-closing = true
in-place = true
recursive = true
aggressive = 4

# Use ruff when possible
[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.ruff]
required-version = ">=0.9.7"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "fast-pysf",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "W", "C901", "I001"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
